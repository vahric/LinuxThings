Keepalived is vrrp implamentation like for networking keep default gw 
Here keepalived will keep running out VIP ip address of haproxy ...

>First activate ip forwarding ....
sudo sed -i 's/#net.ipv4.ip_forward=1/net.ipv4.ip_forward=1/' /etc/sysctl.conf
>Activate nonlocal binding 
>Edit /etc/sysctl.conf and put two line end of the file  

#Because of keepalived vip ip 
net.ipv4.ip_nonlocal_bind=1

>Lets activate settings
sudo sysctl -p

net.ipv4.ip_forward = 1
net.ipv4.ip_nonlocal_bind = 1

Conf file is vi /etc/keepalived/keepalived.conf 

Log file for keepalived is /var/log/syslog

>Set correct notification mail, sender email addresses and right smtp server address  

# Global Settings for notifications
global_defs {
    notification_email {
        id@domain.com     # Email address for notifications
    }
    notification_email_from id@domain.com       # The from address for the notifications
    smtp_server smtp.yourmailserver.net                       # SMTP server address
    smtp_connect_timeout 15
}

> in this section we will create simple haproxy process check script , we will use it later
> If sig is 0, then no signal is sent, but error checking is still performed; this can be used to check for the existence of a process ID or process group ID. 

# Define the script used to check if haproxy is still working
vrrp_script chk_haproxy {
    script "/usr/bin/killall -0 haproxy"
    interval 2
    weight 2
}

> in this section we will configure which interface used for vip ip , who will master, priority and virtual router id 
> ens160 will be tracked automaticly, if this interface become down then keepalived will trigger failover
> state is important one will be MASTER other will be BACKUP, here i showed only MASTER , for other peer set it BACKUP
> priority is another important setting, it should be high on MASTER and low on BACKUP
> Every vrrp instance should have unique value but each peer should have exact same value for that instance 
> We have another interface for talking backend servers, we will keep looking for it too ...

vrrp_instance LB_VIP {
    interface ens160
    state MASTER        # set to BACKUP on the peer machine
    priority 101        # set to  99 on the peer machine
    virtual_router_id 51

    track_interface {
      ens192
    }

> Alert is activated ...
    smtp_alert          # Enable Notifications Via Email

> each peer need auth in this configuration, simple password for peers for they are one ... 
    authentication {
        auth_type AH
        auth_pass kendimi # Password for accessing vrrpd. Same on all devices
    }

> if you are doing this configuration in aws you will need unicast, we do not need it ....

#    unicast_src_ip 10.111.78.10 # Private IP address of master
#    unicast_peer {
#        10.111.78.11           # Private IP address of the backup haproxy
#   }


    # The virtual ip address shared between the two loadbalancers
    virtual_ipaddress {
        your.vip.addres.here
    }

> lets use out script to check ....
# Use the Defined Script to Check whether to initiate a fail over
    track_script {
        chk_haproxy
    }
}

> Go....
> Lets start keepalived on MASTER

sudo systemctl start keepalived
systemctl status keepalived

> Status command will tell something good or bad ...
> if you execute command ip a you will see that vip ip address is 

